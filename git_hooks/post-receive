#!/usr/bin/perl
use strict;
my $static_file_root = '/var/shui/www';
sub delete_static_file {
	my $fn = $_[0];
	unlink "$static_file_root/$fn";
}
sub add_static_file {
	my $fn = $_[0];
	`mv $fn $static_file_root/$fn`;
}
print STDERR "@ARGV\n";
if($ARGV[0] ne 'refs/heads/master'){
	exit(0);
}
my @revs = `git rev-list ^$ARGV[1] $ARGV[2]`;
my $ii;
for $ii (reverse (0..$#revs)){
	chomp $revs[$ii];
	print STDERR "Updating to $revs[$ii]\n";
	open DL, "git diff --name-status --diff-filter=D $revs[$ii]^ $revs[$ii] |";
	while(<DL>){
		print STDERR "$_\n";
		if($_ =~ m/^D\s*(.*)$/){
			my $file_name = $1;
			if ($file_name ~= /\./){
				print STDERR "Now deleting static file $file_name\n";
				&delete_static_file($file_name);
				next;
			}
			print STDERR "Now deleting file $file_name\n";
			`git checkout -f $revs[$ii]^ $file_name`;
			`node ~/node/d_hook.js $file_name`;
			unlink $file_name;
		}
	}
	close DL;
	open AML, "git diff --name-status --diff-filter=AM $revs[$ii]^ $revs[$ii] |";
	while(<AML>){
		print STDERR "$_\n";
		if($_ =~ m/^(A|M)\s*(.*)$/){
			my $file_name = $2;
			`git checkout -f $revs[$ii] $file_name`;
			if ($file_name ~= /\./){
				print STDERR "Now adding static file $file_name\n";
				&add_static_file($file_name);
				next;
			}
			$time = `git log --format=%at -1 $revs[$ii]`;
			chomp $time;
			$author = `git log --format=%an -1 $revs[$ii]`;
			chomp $author;
			print STDERR "Now updating file $file_name\n";
			`node ~/node/am_hook.js $file_name $time $author`;
			unlink $file_name;
		}
	}
	close AML;
}
